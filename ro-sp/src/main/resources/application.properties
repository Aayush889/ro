#
# /*
# *******************************************************************************
#
#  Copyright (c) 2023-24 Harman International
#
#
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#
#  you may not use this file except in compliance with the License.
#
#  You may obtain a copy of the License at
#
#
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#
#
#  Unless required by applicable law or agreed to in writing, software
#
#  distributed under the License is distributed on an "AS IS" BASIS,
#
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
#  See the License for the specific language governing permissions and
#
#  limitations under the License.
#
#
#
#  SPDX-License-Identifier: Apache-2.0
#
#  *******************************************************************************
#  */
#
#################################################################################################################
#            Stream processor properties
#            Below are the required properties for the stream processors to run
#################################################################################################################
launcher.impl.class.fqn=org.eclipse.ecsp.analytics.stream.base.KafkaStreamsLauncher
#Below property specify the name for the streamprocessor like ecall,bcall, ro etc
service.name=ro
rcpd.service.name=rcpd
#Below property specify the Fully qualified name of your processor(s) classes. Currently single processor is supported
service.stream.processors=org.eclipse.ecsp.ro.processor.ROStreamProcessor
#The input source topic your stream processor listens to
source.topic.name=haa-harman-dev-ro
kafka.sink.scheduler.topic=scheduler
#The sink topic where the stream processor will push the dta to
sink.topic.name=https-integ-high,https-integ-low
#application id / consumer group of your stream processor
application.id=ro-sp-dev
#Comma separated list of kafka brokers
bootstrap.servers=10.0.0.40:9092,10.0.0.218:9092,10.0.0.23:9092
#Comma separated list of zookeepers
zookeeper.connect=10.0.0.244:2181,10.0.0.85:2181,10.0.0.27:2181
#Number of parallelism
num.stream.threads=1
#State store directory
state.dir=/tmp/kafka-streams
#Number of records that will be polled from kafka topic
max.poll.records=1000
session.timeout.ms=30000
request.timeout.ms=40000
kafka.rebalance.time.mins=10
kafka.streams.offset.persistence.enabled=false
kafka.close.timeout.secs=30
#setting this to nowhere means reset will not happen (earliest,latest,nowhere)
application.offset.reset=nowhere
#comma-separated list of topics which will be resetted
application.reset.topics=
#Set the below property as true, if changeLog topic is to be created for the state store
state.store.changelog.enabled=false
#################################################################################################################
#            Transformer properties
#            Developer should provide the logic to convert byte[] to Igniteevent
#################################################################################################################
#Provide the custom implementation of how the byte[] (JSON) should be converted to Ignite event
event.transformer.classes=genericIgniteEventTransformer
#Provide the custom implementation of how the byte[](JSON) should be converted to Ignite key
ignite.key.transformer.class=org.eclipse.ecsp.transform.IgniteKeyTransformerStringImpl
#################################################################################################################
#            Metric Properties
#            In case you want to capture metrics for your stream processor
#################################################################################################################
#metric.reporters=org.eclipse.ecsp.analytics.stream.base.metrics.reporter.ConsoleMetricReporter
metrics.sample.window.ms=60000
metrics.num.samples=15000
#Kafka-redis-connector metrics
#define the interval of logging
metric.logging.interval=2
#define the time units. Possible values supported are minutes,seconds, hours, milliseconds
metric.logging.unit=minutes
#metrics for reporting the number of events getting processed per second
metrics.event.rate.enable=true
#metrics for reporting the number of events processed by redis per second
metrics.event.rate.redis.enable=true
#metrics for reporting the average latency in events processing for redis
metrics.avg.latency.redis.enable=true
#################################################################################################################
#    Mqtt Properties
#    You should configure the mqtt properties in case you wanted to send some data to Device (via mqtt)
#   Used by DeviceMessaging agent
#################################################################################################################
mqtt.short.circuit=true
mqtt.broker.url=tcp://10.0.1.152:1883
mqtt.topic.separator=/
mqtt.config.qos=1
mqtt.user.name=haa_api
#mqtt.user.password=*****
mqtt.service.topic.name=ro
mqtt.service.topic.name.prefix=haa/harman/dev/
#################################################################################################################
#            Cumulative logging Properties
#            You should configure the below properties in case you want cumlative logging (CLOGGER)
#################################################################################################################
#Cumulative logging configuration
log.counts=true
log.counts.minutes=1
log.per.pdid=false
discovery.impl.class.fqn=org.eclipse.ecsp.analytics.stream.base.discovery.PropBasedDiscoveryServiceImpl
#Serialization class
ingestion.serializer.class=org.eclipse.ecsp.serializer.IngestionSerializerFstImpl
#SSL Configuration
kafka.ssl.enable=true
kafka.ssl.client.auth=required
kafka.client.keystore=/kafka/ssl/kafka.client.keystore.jks
kafka.client.key.password=pUBPHXM9mP5PrRBrTEpF5cV2TpjvWtb5
kafka.client.truststore=/kafka/ssl/kafka.client.truststore.jks
mongodb.host=localhost
mongodb.port=27018
mongodb.auth.db=admin
mongodb.name=harmandev
mongodb.pool.max.size=200
mongodb.max.wait.time.ms=60000
mongodb.connection.timeout.ms=60000
mongodb.socket.timeout.ms=60000
mongodb.max.connections.per.host=200
mongodb.block.threads.allowed.multiplier=10
mongodb.read.preference=primaryPreferred
morphia.map.packages=org.eclipse.ecsp.nosqldao
device.messaging.event.transformer.class=org.eclipse.ecsp.transform.DeviceMessageIgniteEventTransformer
#Maximum number of RO Response to be persisted
max.number.ro.response=20
#whitelisted origin will receive notification
whitelisted.dff.origins.list=THIRDPARTY2
#Dff Qualifier for Remote Inhibit
settings.object.json.path=settings[0].Data.configurationObject
dma.auto.offset.reset=earliest
dma.service.max.retry=6
dma.service.retry.interval.millis=540000
dma.service.ttl.buffer=120000
redis_sentinels="10.0.0.145:26379,10.0.0.89:26379,10.0.0.248:26379"
redis_sentinel_endpoints="10.0.0.145:26379,10.0.0.89:26379,10.0.0.248:26379"
redis_master_name=redis-sentinel
redis_address=""
redis_database="0"
redis.netty.threads=0
redis.decode.in.executor=true
mongodb.vault.enabled=false
vault.secret.folder=ro-sp
vault.environment=dev
#Shoulder tap invoker implementation class.
dma.shoulder.tap.invoker.impl.class=org.eclipse.ecsp.stream.dma.shouldertap.ShoulderTapInvokerWAMImpl
# Shoulder tap WAM API Send SMS endpoint
dma.shoulder.tap.invoker.wam.send.sms.url=https://localhost:8080/v1.0/sms/send/
# Shoulder tap WAM API SMS Transaction Status endpoint
dma.shoulder.tap.invoker.wam.sms.transaction.status.url=https://localhost:8080/v1.0/sim/transaction/
# Shoulder tap WAM API SMS priority. Applicable values: HIGH, LOW. Default is HIGH.
dma.shoulder.tap.wam.sms.priority=HIGH
# Shoulder tap WAM API SMS call: flag to skip the status check of any previous send SMS call before invoking again.
dma.shoulder.tap.wam.send.sms.skip.status.check=true
notification.responsemessage.notificationid.mapping={"":""}
dma.shoulder.tap.wam.sms.validity.hours=72
msg.seq.time.interval.in.millis=200
spring.main.allow-bean-definition-overriding=true
ri.partner.service.id=RI
callcenter.enabled.origin=SVL,NOTIFICATION
ro.operation.firing.count=1000
scheduler.recurrence.delay=0
rcpd.request.validity.duration=518400000
rcpd.notificationId.mapping={"":""}
# CR1379 remote engine start status ttl engineStatusTTL engineStartCheckEnable
engine.status.ttl.ms=900000
engine.start.check.enable=true
ro.queue.enable=true
ro.foreach.ttl=180000
#event metrics
kafka.data.consumption.metrics=true
data.consumption.metrics.kafka.topic=data_usage
deviceMessage.failures.store=true
metrics.prometheus.enabled=true
metrics.dao.enable=true
sm.sink.topic=settingsmgmt
stocking.rule.configurationObject=notificationMapping
stockingRule.enable=false
stockingRule.config.events=RemoteOperationEngine
stockingRule.key.name=mappingName
shoulderTapResolver.custom=default
mongodb.collection.shardkey.map="ro:roEvent.vehicleId,dmOfflineBufferEntriesro:vehicleId"
notification.status.mapping={"":""}
dff.qualifier.mapping={"GET_TIMEZONE": "QUALIFIER_TIMEZONE_THIRDPARTY6", "REMOTEOPERATIONNOTIFICATION":"QUALIFIER_REMOTENOTIFICATION_THIRDPARTY2"}
pm.status.url=http://privacymode-api-int-svc.default.svc.cluster.local:8080/privacy-mode-api/v1.0/vehicles/{vehicleId}/privacymode/status
notification.identifier.archAndEcu={"VEHICLE_ARCHTYPE1":{"ECU1":"vehicle_archType1Identifier"},"VEHICLE_ARCHTYPE3":{"TELEMATICS":"defaultIdentifier"},"VEHICLE_ARCHTYPE2":{"ECU1": "vehicle_archType1Identifier","ECU2":"defaultIdentifier","ECU4":"defaultIdentifier","ECU3":"defaultIdentifier"}}
# task 502686 health_mqtt_monitor_restart_on_failure
health.mqtt.monitor.enabled=true
health.mqtt.monitor.restart.on.failure=true
sp.restart.on.failure=true
deviceDeliveryCutoffResolver.custom=default
#dff entity from ignite to dff agent
dff.enabled=true
pre.processors=org.eclipse.ecsp.analytics.stream.base.processors.TaskContextInitializer,org.eclipse.ecsp.analytics.stream.base.processors.ProtocolTranslatorPreProcessor,org.eclipse.ecsp.analytics.stream.base.processors.MsgSeqPreProcessor,org.eclipse.ecsp.analytics.stream.base.processors.DeviceMessagingAgentPreProcessor
post.processors=org.eclipse.ecsp.analytics.stream.base.processors.SchedulerAgentPostProcessor,org.eclipse.ecsp.analytics.stream.base.processors.DeviceMessagingAgentPostProcessor,org.eclipse.ecsp.analytics.stream.base.processors.ProtocolTranslatorPostProcessor
#Update the following flag [this flag was part of SB earlier, but due to code migration need to be taken care separately]:
ignore.bootstrap.failure.monitors=KAFKA_CONSUMER_GROUP_HEALTH_MONITOR,DEVICE_STATUS_BACKDOOR_HEALTH_MONITOR,DFF_FEED_BACKDOOR_HEALTH_MONITOR
mongodb.username=${MONGODB_USERNAME:admin}
mongodb.password=${MONGODB_PASSWORD:password}
mqtt.user.password=${MQTT_USER_PASSWORD:xxxxx}
mqtt.rcpd.topic.name=ro
