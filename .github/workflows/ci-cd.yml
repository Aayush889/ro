# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build
env:
  IMAGE_TAG_HASH: ""
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  VERSION: ""
  RUN_TESTS: "true"

on:
  push:
    branches:
    - "*"
    - "!main"
    paths-ignore:
      - '**/NOTICE'
      - '**/NOTICE.md'
      - '**/CODE_OF_CONDUCT.md'
      - '**/CONTRIBUTING.md'
      - '**/SECURITY.md'

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results
  contents: write
  packages: write
  attestations: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      packages: write
      id-token: write
      attestations: write

    outputs:
      RO_API_VERSION: ${{ steps.extract-ro-api.outputs.version }}-${{ steps.image-tag-hash.outputs.HASH }}
      RO_SP_VERSION: ${{ steps.extract-ro-sp.outputs.version }}-${{ steps.image-tag-hash.outputs.HASH }}

    steps:
      - uses: actions/checkout@v4
        name: Checkout

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: maven
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Find commit hash
        id: image-tag-hash
        if: env.IMAGE_TAG_HASH == ''
        run: |
          echo "IMAGE_TAG_HASH=${GITHUB_SHA::7}" | tee -a $GITHUB_ENV
          echo "HASH=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Find Maven version for build
        if: github.ref == 'refs/heads/main'
        run: |
          mvn versions:set -D removeSnapshot -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

      - name: Build
        run: mvn -D maven.test.skip=true -B package --file pom.xml -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

      - name: Tests
        if: ${{ env.RUN_TESTS == 'true' }}
        run: mvn test --file pom.xml -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract ro-api pom
        id: extract-ro-api
        uses: andreacomo/maven-gav-extractor@v2
        with:
          pom-location: ${{ github.workspace }}/ro-api/pom.xml

      - name: Log ro-api
        run: |
          echo ${{ steps.extract-ro-api.outputs.group-id }}
          echo ${{ steps.extract-ro-api.outputs.artifact-id }}
          echo ${{ steps.extract-ro-api.outputs.version }}
          echo ${{ steps.extract-ro-api.outputs.name }}
        shell: bash

      - name: Extract ro-sp pom
        id: extract-ro-sp
        uses: andreacomo/maven-gav-extractor@v2
        with:
          pom-location: ${{ github.workspace }}/ro-sp/pom.xml

      - name: Log ro-sp
        run: |
          echo ${{ steps.extract-ro-sp.outputs.group-id }}
          echo ${{ steps.extract-ro-sp.outputs.artifact-id }}
          echo ${{ steps.extract-ro-sp.outputs.version }}
          echo ${{ steps.extract-ro-sp.outputs.name }}
        shell: bash

      - id: lower-repo
        name: Repository to lowercase
        run: |
          echo "githubowner=${GITHUB_REPOSITORY_OWNER@L}" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image for RO API
        id: push-ro-api
        uses: docker/build-push-action@v6
        with:
          context: ./ro-api
          file: ./ro-api/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ steps.lower-repo.outputs.githubowner }}/${{ steps.extract-ro-api.outputs.artifact-id }}:${{ steps.extract-ro-api.outputs.version }}-${{ env.IMAGE_TAG_HASH }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            API_WAR_NAME=${{ steps.extract-ro-api.outputs.artifact-id }}
            PROJECT_JAR_VERSION=${{ steps.extract-ro-api.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

      - name: Build and push Docker image for RO SP
        id: push-ro-sp
        uses: docker/build-push-action@v6
        with:
          context: ./ro-sp
          file: ./ro-sp/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ steps.lower-repo.outputs.githubowner }}/${{ steps.extract-ro-sp.outputs.artifact-id }}:${{ steps.extract-ro-sp.outputs.version }}-${{ env.IMAGE_TAG_HASH }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PROJECT_JAR_VERSION=${{ steps.extract-ro-sp.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

      - name: Generate artifact attestation RO API
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ steps.lower-repo.outputs.githubowner }}/${{ steps.extract-ro-api.outputs.artifact-id}}
          subject-digest: ${{ steps.push-ro-api.outputs.digest }}
          push-to-registry: true

      - name: Generate artifact attestation RO SP
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ steps.lower-repo.outputs.githubowner }}/${{ steps.extract-ro-sp.outputs.artifact-id}}
          subject-digest: ${{ steps.push-ro-sp.outputs.digest }}
          push-to-registry: true


