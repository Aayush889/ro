<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.eclipse.ecsp</groupId>
    <version>1.0.0</version>
    <artifactId>ro</artifactId>
    <name>ro</name>
    <packaging>pom</packaging>
    <url>https://github.com/eclipse-ecsp/ro</url>

    <modules>
        <module>ro-entities</module>
        <module>ro-api</module>
        <module>ro-sp</module>
    </modules>

    <scm>
        <connection>scm:git:https://github.com/eclipse-ecsp/ro.git</connection>
        <url>https://github.com/eclipse-ecsp/ro</url>
        <tag>HEAD</tag>
    </scm>

    <licenses>
        <license>
            <name>Apache-2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/eclipse-ecsp/ro/issues</url>
    </issueManagement>

    <organization>
        <url>https://github.com/eclipse-ecsp</url>
        <name>eclipse-ecsp</name>
    </organization>

    <developers>
        <developer>
            <name>Suyash Srivastava</name>
            <organization>HARMAN Automotive</organization>
            <organizationUrl>https://github.com/HARMAN-Automotive</organizationUrl>
        </developer>
    </developers>

    <properties>
        <!-- Project Properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.17.options>
            --add-opens=java.base/java.io=ALL-UNNAMED
            --add-opens=java.base/java.lang=ALL-UNNAMED
            --add-opens=java.base/java.math=ALL-UNNAMED
            --add-opens=java.base/java.util=ALL-UNNAMED
            --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
            --add-opens=java.base/java.net=ALL-UNNAMED
            --add-opens=java.base/java.text=ALL-UNNAMED
            --add-opens=java.sql/java.sql=ALL-UNNAMED
            --add-opens=java.base/java.time=ALL-UNNAMED
            --add-opens=java.base/java.security=ALL-UNNAMED
            --add-opens=java.base/java.security.interfaces=ALL-UNNAMED
            --add-opens=java.base/java.security.spec=ALL-UNNAMED
            --add-opens=java.base/javax.crypto=ALL-UNNAMED
            --add-opens=java.base/java.lang.reflect=ALL-UNNAMED
            --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED
            --add-opens=java.management/javax.management=ALL-UNNAMED
            --add-opens=java.desktop/sun.font=ALL-UNNAMED
            --add-opens=java.base/sun.reflect.generics.parser=ALL-UNNAMED
            --add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED
            --add-exports=java.base/sun.util.calendar=ALL-UNNAMED
            --add-exports=java.base/sun.security.action=ALL-UNNAMED
            --add-exports=java.xml/jdk.xml.internal=ALL-UNNAMED
            --add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED
            --add-opens=java.base/jdk.internal.misc=ALL-UNNAMED
            --add-opens=java.base/sun.nio.ch=ALL-UNNAMED
            --add-opens=java.management/com.sun.jmx.mbeanserver=ALL-UNNAMED
            --add-opens=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED
            --add-opens=java.base/sun.reflect.generics.reflectiveObjects=ALL-UNNAMED
            --add-opens=java.base/java.nio=ALL-UNNAMED
            --add-opens=java.base/java.time.format=ALL-UNNAMED
        </java.17.options>

        <!-- Maven artifactory Properties -->
        <artifactory.repo>https://maven.pkg.github.com/harman-automotive/csp-central-repo</artifactory.repo>

        <!-- Maven Properties -->
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>

        <!-- Maven Plugin Properties -->
        <maven.clean.plugin.version>3.1.0</maven.clean.plugin.version>
        <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
        <maven.cyclonedx.plugin.version>2.7.10</maven.cyclonedx.plugin.version>
        <maven.failsafe.plugin.version>2.18.1</maven.failsafe.plugin.version>
        <maven.release.plugin.version>2.5.3</maven.release.plugin.version>
        <maven.shade.plugin.version>2.1</maven.shade.plugin.version>
        <maven.surefire.version>3.2.1</maven.surefire.version>
        <maven.war.plugin.version>3.3.1</maven.war.plugin.version>

        <!-- SONAR Plugin Properties -->
        <sonar.plugin.version>3.4.0.905</sonar.plugin.version>
        <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
        <sonar.coverage.jacoco.xmlReportPaths>${project.build.directory}/site/jacoco-ut/jacoco.xml
        </sonar.coverage.jacoco.xmlReportPaths>
        <sonar.language>java</sonar.language>
        <sonar.exclusions>
            src/main/java/org/eclipse/ecsp/domain/ro/*,
            src/main/java/org/eclipse/ecsp/domain/remoteInhibit/*,
            src/main/java/org/eclipse/ecsp/ro/domains/*,
            src/main/java/org/eclipse/ecsp/ro/constant/*,
            src/main/java/org/eclipse/ecsp/ro/constants/*,
            src/main/java/org/eclipse/ecsp/platform/services/ro/client/*
            src/main/java/org/eclipse/ecsp/platform/services/ro/domain/*,
            src/main/java/org/eclipse/ecsp/platform/services/ro/constant/*,
            src/main/java/org/eclipse/ecsp/platform/services/ro/service/DeviceMessageFailuresEventFiler.java
        </sonar.exclusions>

        <!-- Jacoco Plugin Properties -->
        <jacoco.plugin.version>0.8.8</jacoco.plugin.version>
        <jacoco.ut.execution.data.file>${project.build.directory}/site/jacoco-ut/jacoco.xml
        </jacoco.ut.execution.data.file>

        <!-- Docker Plugin Properties -->
        <dockerfile.maven.plugin.version>1.3.6</dockerfile.maven.plugin.version>
        <docker.registry>https://maven.pkg.github.com/harman-automotive/csp-central-repo</docker.registry>
        <docker.maven.plugin.version>1.2.2</docker.maven.plugin.version>

        <!-- ######## Dependency versions ######## -->
        <!-- CSP Dependency Versions -->
        <haa.stream.base.version>1.1.0</haa.stream.base.version>
        <cache.enabler.version>1.0.0</cache.enabler.version>
        <ignite.entities.version>1.1.1</ignite.entities.version>
        <ignite.utils.version>1.1.1</ignite.utils.version>
        <api.common.version>1.0.1</api.common.version>
        <api-registry-common.version>1.1.1</api-registry-common.version>
        <services.common.version>1.0.2</services.common.version>
        <sp.common.version>1.0.0</sp.common.version>
        <test-container.version>1.21.0</test-container.version>

        <!-- Spring Dependency Versions -->
        <spring.version>6.2.4</spring.version>
        <spring.boot.version>3.4.4</spring.boot.version>

        <!-- Third party Dependency Versions -->
        <commons.io.version>2.16.1</commons.io.version>
        <commons.lang.version>2.4</commons.lang.version>
        <ehcache.version>2.10.9.2</ehcache.version>
        <google.jsonsimple.version>1.1.1</google.jsonsimple.version>
        <logback.version>1.5.5</logback.version>
        <moquette.broker.version>0.17</moquette.broker.version>
        <netty.codec.version>4.1.108.Final</netty.codec.version>
        <netty.version>4.1.108.Final</netty.version>
        <redis.jar.version>2.6.0.5</redis.jar.version>
        <embed.mongo.version>3.4.4</embed.mongo.version>

        <!-- Test Dependency Versions -->
        <junit.version>5.10.2</junit.version>
        <junit.platform.version>1.10.2</junit.platform.version>

        <!--Checkstyle plugin properties -->
        <checkstyle.version>10.13.0</checkstyle.version>
        <maven.checkstyle.version>3.3.1</maven.checkstyle.version>
        <checkstyle.config.location>${project.basedir}/checkstyle.xml</checkstyle.config.location>
        <sonar.java.checkstyle.reportPaths>${project.build.directory}/checkstyle-result.xml
        </sonar.java.checkstyle.reportPaths>
    </properties>

    <!-- ############ DEPENDENCIES ############ -->
    <dependencies>

        <!-- CSP dependencies -->
<!--        <dependency>-->
<!--            <groupId>org.eclipse.ecsp</groupId>-->
<!--            <artifactId>streambase</artifactId>-->
<!--            <version>${haa.stream.base.version}</version>-->
<!--            <scope>test</scope>-->
<!--            <exclusions>-->
<!--                <exclusion>-->
<!--                    <groupId>org.eclipse.ecsp</groupId>-->
<!--                    <artifactId>nosql-dao</artifactId>-->
<!--                </exclusion>-->
<!--            </exclusions>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.eclipse.ecsp</groupId>
            <artifactId>cache-enabler</artifactId>
            <version>${cache.enabler.version}</version>
        </dependency>
        <!-- to be removed transitive dependency issue is fixed and stream-base is repackaged-->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20250107</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Third party dependencies -->
        <dependency>
            <groupId>io.moquette</groupId>
            <artifactId>moquette-broker</artifactId>
            <version>${moquette.broker.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-common</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-buffer</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-transport</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-handler</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-codec</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-codec-http</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-codec-mqtt</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-transport-native-epoll</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-reload4j</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-mqtt</artifactId>
            <version>${netty.codec.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-http</artifactId>
            <version>${netty.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport-native-epoll</artifactId>
            <version>${netty.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.iakovlev</groupId>
            <artifactId>timeshape</artifactId>
            <version>2020d.12</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.eclipse.ecsp</groupId>
            <artifactId>api-common</artifactId>
            <version>${api.common.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-engine</artifactId>
            <version>${junit.platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>de.flapdoodle.embed</groupId>
            <artifactId>de.flapdoodle.embed.mongo</artifactId>
            <version>${embed.mongo.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-compress</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.platform.version}</version> <!-- Use the latest version -->
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-ext</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>kafka</artifactId>
            <version>1.21.0</version> <!-- Use the latest version -->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mongodb</artifactId>
            <version>1.21.0</version> <!-- Use the latest version -->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.redis.testcontainers</groupId>
            <artifactId>testcontainers-redis</artifactId>
            <version>1.6.4</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version> <!-- Use the version compatible with your project -->
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version> <!-- Use the same version as logback-classic -->
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-commons</artifactId>
            <version>${junit.platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>3.7.1</version>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Maven Compiler Plugin configuration -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                        <compilerArgs>
                            <arg>--add-opens=java.base/java.io=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/java.lang=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/java.math=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/java.util=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/java.util.concurrent=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/java.net=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/java.text=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.sql/java.sql=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/java.time=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/java.security=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/java.security.interfaces=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/java.security.spec=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/javax.crypto=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/java.lang.reflect=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.management/javax.management=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.desktop/sun.font=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/sun.reflect.generics.parser=ALL-UNNAMED</arg>
                            <arg>--add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED</arg>
                            <arg>--add-exports=java.base/sun.util.calendar=ALL-UNNAMED</arg>
                            <arg>--add-exports=java.base/sun.security.action=ALL-UNNAMED</arg>
                            <arg>--add-exports=java.xml/jdk.xml.internal=ALL-UNNAMED</arg>
                            <arg>--add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/sun.nio.ch=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.management/com.sun.jmx.mbeanserver=ALL-UNNAMED</arg>
                            <arg>--add-opens=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/sun.reflect.generics.reflectiveObjects=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/java.nio=ALL-UNNAMED</arg>
                            <arg>--add-opens=java.base/java.time.format=ALL-UNNAMED</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>

                <!-- Maven war plugin configuration -->
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven.war.plugin.version}</version>
                    <configuration>
                        <attachClasses>true</attachClasses>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>

                <!-- Maven Surefire Plugin configuration -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.version}</version>
                    <configuration>
                        <forkCount>1</forkCount>
                        <reuseForks>false</reuseForks>
                        <forkMode>pertest</forkMode>
                        <argLine>
                            ${surefireArgLine}
                            ${java.17.options}
                        </argLine>
                        <useSystemClassLoader>false</useSystemClassLoader>
                        <forkedProcessExitTimeoutInSeconds>300</forkedProcessExitTimeoutInSeconds>
                        <childDelegation>true</childDelegation>
                        <skipTests>false</skipTests>
                        <runOrder>alphabetical</runOrder>
                        <trimStackTrace>false</trimStackTrace>
                    </configuration>
                </plugin>

                <!-- Maven JaCoCo Plugin configuration -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.plugin.version}</version>
                    <configuration>
                        <excludes>
                            <exclude>**/**.jar</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>pre-unit-test</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${jacoco.ut.execution.data.file}</destFile>
                                <propertyName>surefireArgLine</propertyName>
                                <excludes>
                                    <exclude>**/*Constant*</exclude>
                                    <exclude>**/domain/**/*EventData*</exclude>
                                    <exclude>**/domains/**/*EventData*</exclude>
                                    <exclude>**/*Exception*</exclude>
                                </excludes>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${jacoco.ut.execution.data.file}</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Maven SONAR Plugin configuration -->
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.cyclonedx</groupId>
                    <artifactId>cyclonedx-maven-plugin</artifactId>
                    <version>${maven.cyclonedx.plugin.version}</version>
                    <configuration>
                        <projectType>application</projectType>
                        <schemaVersion>1.5</schemaVersion>
                        <includeBomSerialNumber>true</includeBomSerialNumber>
                        <includeCompileScope>true</includeCompileScope>
                        <includeProvidedScope>true</includeProvidedScope>
                        <includeRuntimeScope>true</includeRuntimeScope>
                        <includeSystemScope>true</includeSystemScope>
                        <includeTestScope>true</includeTestScope>
                        <includeLicenseText>true</includeLicenseText>
                        <outputFormat>all</outputFormat>
                        <outputDirectory>${project.basedir}/sbom</outputDirectory>
                        <verbose>false</verbose>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>makeAggregateBom</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.cyclonedx</groupId>
                <artifactId>cyclonedx-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
            </plugin>

            <!-- Maven Checkstyle Plugin configuration -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.version}</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                            <outputFileFormat>xml</outputFileFormat>
                            <failsOnError>true</failsOnError>
                            <failOnViolation>true</failOnViolation>
                            <violationSeverity>warning</violationSeverity>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                            <includeResources>true</includeResources>
                            <includeTestResources>true</includeTestResources>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${checkstyle.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <pluginRepositories>
        <pluginRepository>
            <id>dash-licenses-releases</id>
            <url>https://repo.eclipse.org/content/repositories/dash-licenses-releases/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
        <repository>
            <id>github</id>
            <name>GitHub HARMAN Automotive Apache Maven Packages</name>
            <url>https://maven.pkg.github.com/harman-automotive/csp-central-repo</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>central</id>
            <url>https://repo1.maven.org/maven2</url>
            <layout>default</layout>
        </repository>
    </repositories>

    <distributionManagement>
        <repository>
            <id>github</id>
            <name>GitHub HARMAN Automotive Apache Maven Packages</name>
            <url>https://maven.pkg.github.com/harman-automotive/csp-central-repo</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </distributionManagement>

</project>
