#
# /*
# *******************************************************************************
#
#  Copyright (c) 2023-24 Harman International
#
#
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#
#  you may not use this file except in compliance with the License.
#
#  You may obtain a copy of the License at
#
#
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  ?????
#
#  Unless required by applicable law or agreed to in writing, software
#
#  distributed under the License is distributed on an "AS IS" BASIS,
#
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
#  See the License for the specific language governing permissions and
#
#  limitations under the License.
#
#
#
#  SPDX-License-Identifier: Apache-2.0
#
#  *******************************************************************************
#  */
#
service.name=ro
bootstrap.servers=10.0.0.40:9092,10.0.0.218:9092,10.0.0.23:9092
vault.enabled=false
health.vault.monitor.enabled=false
health.vault.needs.restart.on.failure=false
mongodb.vault.enabled=false
mongodb.hosts=localhost
mongodb.port=27017
mongodb.username=admin
mongodb.password=password
mongodb.name=admin
mongodb.pool.max.size=200
mongodb.max.wait.time.ms=60000
mongodb.connection.timeout.ms=60000
mongodb.socket.timeout.ms=60000
mongodb.max.connections.per.host=200
mongodb.block.threads.allowed.multiplier=10
mongodb.read.preference=primaryPreferred
redis.address=127.0.0.1:6379
redis.sentinels=
redis.master.name=
redis.dns.monitoring.interval=5000
redis.read.mode=SLAVE
redis.subscription.mode=SLAVE
redis.subscription.conn.min.idle.size=1
redis.subscription.conn.pool.size=50
redis.slave.conn.min.idle.size=32
redis.slave.pool.size=64
redis.master.conn.min.idle.size=32
redis.master.conn.pool.size=64
redis.idle.conn.timeout=10000
redis.conn.timeout=10000
redis.timeout=3000
redis.retry.attempts=3
redis.retry.interval=1500
redis.reconnection.timeout=3000
redis.failed.attempts=3
redis.database=0
redis.password=
redis.subscriptions.per.conn=5
redis.client.name=yellow
redis.conn.min.idle.size=32
redis.conn.pool.size=64
redis.cluster.masters=
redis.scan.interval=1000
redis.netty.threads=32
redis.decode.in.executor=true
redis.executor.threads=32
redis.keep.alive=true
redis.ping.connection.interval=60000
redis.tcp.no.delay=true
redis.transport.mode=NIO
health.kafka.topics.monitor.enabled=false
metrics.prometheus.enabled=false
########## TestContainer Properties######################
container.required.redis=true
container.required.kafka=false
container.required.mongodb=true
container.required.hivemq=false
container.required.postgres=false
container.image.redis=redis:5.0.3-alpine
container.image.kafka=confluentinc/cp-kafka:7.2.1
container.image.mongodb=mongo:4.4.27
container.image.hivemq=hivemq/hivemq4:4.7.4
########################################################
#Enabling DMA/SCHEDULER Module Configurations For StreamBase
dma.enabled=false
scheduler.enabled=false
ignite.key.transformer.class=org.eclipse.ecsp.transform.IgniteKeyTransformerStringImpl
dma.shoulder.tap.invoker.wam.send.sms.url=http://localhost:8080/v1.0/sms/send/
dma.shoulder.tap.invoker.wam.sms.transaction.status.url=http://localhost:8080/v1.0/sim/transaction/
dma.shoulder.tap.wam.sms.priority=HIGH
# Shoulder tap WAM API SMS validity hour. Value in hours: default is 72 hours.
dma.shoulder.tap.wam.sms.validity.hours=72
# Shoulder tap WAM API SMS call: flag to skip the status check of any previous send SMS call before invoking again.
dma.shoulder.tap.wam.send.sms.skip.status.check=true
# Shoulder tap WAM API: max. retry count and interval to invoke send SMS/transaction status until a response.
dma.shoulder.tap.wam.api.max.retry.count=3
dma.shoulder.tap.wam.api.max.retry.interval.ms=30000
dma.shoulder.tap.enabled=false
dma.ttl.expiry.notification.enabled=false
# Default implementation of EventConfigProvider interface
dma.event.config.provider.class=org.eclipse.ecsp.stream.dma.config.DefaultEventConfigProvider
# Default implementation of DMAConfigResolver interface in stream-base.
dma.config.resolver.class=org.eclipse.ecsp.stream.dma.config.DefaultDMAConfigResolver
#Default implementation for DMA post dispatch handler
dma.post.dispatch.handler.class=org.eclipse.ecsp.stream.dma.handler.DefaultPostDispatchHandler
launcher.impl.class.fqn=org.eclipse.ecsp.analytics.stream.base.KafkaStreamsLauncher
exec.shutdown.hook=false 
morphia.map.packages=org.eclipse.ecsp.nosqldao
messageid.generator.type=org.eclipse.ecsp.stream.base.idgen.internal.HashCodeMessageIdGenerator
mongodb.read.preference.tag=primary_region

########################################################
#Vault Configuration
########################################################
mongodb.client.cleanup.interval.ms=10000
mongodb.client.create.retry.count=3
#Assumed time interval for running threads to release the old mongo client before forced close.
mongodb.client.close.wait.interval.ms=60000
secrets.vault.enabled=false
mongodb.server.selection.timeout=300000
logging.level.org.springframework.data.mongodb=DEBUG
logging.level.org.mongodb.driver=DEBUG
kafka.key.deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
kafka.value.deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
kafka.buffer.memory=524288
kafka.broker.url=127.0.0.1:9092